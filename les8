#include <iostream>
#include <string>

#define N 5

using namespace std;

int main()
{
    string text = "Hello,world!";
    int key = 35412;
    string cipher = "";
    string decipher = "";

    //---------------------------------------------------------------------------
    int M = 0;
    
    if (text.length() % N != 0)
    {
        M = (text.length() / N) + 1;
    }
    else if (text.length() % N == 0)
    {
        M = text.length() / N;
    }
    string** mas;
    mas = new string * [M];
    for (int i = 0; i < M; i++)
    {
        mas[i] = new string[N];
       
     }
    
    int c = 0;
    for (int i = 0; i < M; i++)
    {
        for (int j = 0; j < N; j++)
        {
            
            if (c > text.length())
            {
                mas[i][j] = " ";
            }
            else
            {
                mas[i][j] = text[c];
                c++;
            }
        }
    }

    for (int i = 0; i < M; i++)
    {
        for (int j = 0; j < N; j++)
        {
            cout << mas[i][j];
        }
        cout << endl;
    }
    string** tmp;
    tmp = new string * [M];
    for (int i = 0; i < M; i++)
    {
        tmp[i] = new string[N];
    }
    int revkey = 0;
    
    for (int i = 0; i < M; i++)
    {
        
        for (int j = 0, p = 5; j < N; j++, p--) // можно заменить на логарифм для нахождения колва цифр в числе.
        {
            revkey = key % (int)pow(10, p) / (int)pow(10, p - 1);
            revkey -= 1;
            tmp[i][j] = mas[i][revkey];
            
        }
        
    }
    cout << endl << endl;
    for (int i = 0; i < M; i++)
    {
        for (int j = 0; j < N; j++)
        {
            cout << tmp[i][j];
            cipher += tmp[i][j];
        }
        cout << endl;
    }
    //---------------------------------------------------------------------------

    cout << cipher;

    //---------------------------------------------------------------------------
    
    
    
    
   
    
    
    string** last;
    last = new string * [M];
    for (int i = 0; i < M; i++)
    {
        last[i] = new string[N];
    }
    for (int i = 0; i < M; i++)
    {
        for (int j = 0; j < N; j++)
        {
            last[i][j] = tmp[i][j];
            
        }
        
    }
    int tmp1[5];
    for (int i = 0, p = 5; i < 5; i++, p--)
    {
        tmp1[i] = key % (int)pow(10, p) / (int)pow(10, p - 1);
    }
    int ind[5];
    int num = 1;
    for (int i = 0; i < 5; i++)
    {
        
        for (int j = 0; j < 5; j++)
        {
            if (tmp1[j] == num) {
                ind[i] = j;
                num++;
                break;  
            }
        }
    }

    
    for (int i = 0; i < M; i++)
    {
        for (int j = 0; j < N; j++)
        {
            
            decipher += last[i][ind[j]];
        }
        
    }
    
    
    
    //---------------------------------------------------------------------------

    cout << "\n\n" << decipher;

    for (int i = 0; i < M; i++)
    {
        delete[] last[i];
    }
    delete[] last;
    for (int i = 0; i < M; i++)
    {
        delete[] mas[i];
    }
    delete[] mas;
    for (int i = 0; i < M; i++)
    {
        delete[] tmp[i];
    }
    delete[] tmp;
}

